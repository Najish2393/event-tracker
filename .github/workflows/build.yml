name: Build and Deploy to AWS ECR and EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_FULL_IMAGE_URI: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  APP_INTERNAL_PORT: 8000
  APP_EXTERNAL_PORT: 80

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ env.ECR_FULL_IMAGE_URI }}:${{ github.sha }} .
          docker tag ${{ env.ECR_FULL_IMAGE_URI }}:${{ github.sha }} ${{ env.ECR_FULL_IMAGE_URI }}:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ env.ECR_FULL_IMAGE_URI }}:${{ github.sha }}
          docker push ${{ env.ECR_FULL_IMAGE_URI }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ env.EC2_USER }}"

      - name: Deploy using docker-compose on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          script: |
            echo "--- Starting Docker Compose Deployment ---"

            cd /home/${{ env.EC2_USER }}

            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

            IMAGE_URI=${{ env.ECR_FULL_IMAGE_URI }}:${{ github.sha }}
            docker pull $IMAGE_URI

            export IMAGE_URI=$IMAGE_URI
            export APP_INTERNAL_PORT=${{ env.APP_INTERNAL_PORT }}
            export APP_EXTERNAL_PORT=${{ env.APP_EXTERNAL_PORT }}

            docker compose down || true
            docker compose up -d

            echo "--- Docker Compose Deployment Complete ---"
            docker ps
            docker logs event-tracker

  test:
    name: Basic Service Test
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Wait for service to start
        run: sleep 15

      - name: Test service endpoint
        run: |
          SERVICE_URL="http://${{ env.EC2_HOST }}:${{ env.APP_EXTERNAL_PORT }}/events"
          echo "Checking service at: $SERVICE_URL"
          response=$(curl --fail --silent --show-error $SERVICE_URL)
          echo "Response: $response"
