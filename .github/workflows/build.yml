name: Build and Deploy to AWS ECR and EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_FULL_IMAGE_URI: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  APP_INTERNAL_PORT: 8000
  APP_EXTERNAL_PORT: 80

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ env.ECR_FULL_IMAGE_URI }}:${{ github.sha }} .
          docker tag ${{ env.ECR_FULL_IMAGE_URI }}:${{ github.sha }} ${{ env.ECR_FULL_IMAGE_URI }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.ECR_FULL_IMAGE_URI }}:${{ github.sha }}
          docker push ${{ env.ECR_FULL_IMAGE_URI }}:latest

      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          source: docker-compose.yml
          target: /home/${{ env.EC2_USER }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: SSH and deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          script: |
            cd /home/${{ env.EC2_USER }}
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ env.ECR_FULL_IMAGE_URI }}:latest
            echo "ECR_FULL_IMAGE_URI=${{ env.ECR_FULL_IMAGE_URI }}" > .env
            docker compose down || true
            docker compose up -d
